{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "baijun-ADF2"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage1_ubuntu_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1_ubuntu'"
		},
		"AzureBlobTestTrigger2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobTestTrigger2'"
		},
		"AzureDataExplorer1_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureDataExplorer1'"
		},
		"AzureDataExplorer2_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureDataExplorer2'"
		},
		"AzureDataExplorer3_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureDataExplorer3'"
		},
		"AzureDataLakeStorage3_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage3'"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"AzureDatabricks2_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks2'"
		},
		"AzureDatabricksDeltaLake2_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricksDeltaLake2'"
		},
		"AzureDatabricksbjucdbrtest_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricksbjucdbrtest'"
		},
		"AzureDatabricksbjucdbrtest3_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricksbjucdbrtest3'"
		},
		"AzureMySql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureMySql1'"
		},
		"AzureMySql2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureMySql2'"
		},
		"AzureMySqlMPE_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureMySqlMPE'"
		},
		"AzureMySqlUpsertToSQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureMySqlUpsertToSQL'"
		},
		"AzurePostgreSql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzurePostgreSql1'"
		},
		"AzurePostgreSql2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzurePostgreSql2'"
		},
		"AzurePostgreSql3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzurePostgreSql3'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"AzureSqlDatabase2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase2'"
		},
		"AzureSqlDatabase3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase3'"
		},
		"AzureSqlMI1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlMI1'"
		},
		"AzureSqlUpsert1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlUpsert1'"
		},
		"AzureSynapseAnalytics1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics1'"
		},
		"AzureSynapseAnalyticsADFMI_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalyticsADFMI'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=dbpod-workspacev2.sql.azuresynapse.azure.cn;Initial Catalog=dbpodpool"
		},
		"AzureSynapseAnalyticsSP1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalyticsSP1'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=dbpod-workspacev2.sql.azuresynapse.azure.cn;Initial Catalog=dbpodpool"
		},
		"AzureSynapseAnalyticsSP1_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureSynapseAnalyticsSP1'"
		},
		"AzureSynapseAnalyticsqlauth_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalyticsqlauth'"
		},
		"Azurebaijuntestsql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Azurebaijuntestsql1'"
		},
		"Odbc1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Odbc1'"
		},
		"Odbc1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Odbc1'"
		},
		"PostgreSql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'PostgreSql1'"
		},
		"SqlServer2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer2'"
		},
		"SqlServerSample_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServerSample'"
		},
		"baijunhdiblob1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'baijunhdiblob1'"
		},
		"bklsmi1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'bklsmi1'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=poddbws.sql.azuresynapse.azure.cn;Initial Catalog=sqlpool001"
		},
		"dbpodsynapse_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'dbpodsynapse'"
		},
		"dwsqlpool_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'dwsqlpool'"
		},
		"psqlvincysource_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'psqlvincysource'"
		},
		"stgadfinctest_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'stgadfinctest'"
		},
		"stgadfinctestsink_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'stgadfinctestsink'"
		},
		"vincydw_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'vincydw'"
		},
		"vincymysql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'vincymysql'"
		},
		"vincypsqltarget_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'vincypsqltarget'"
		},
		"vincysql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'vincysql'"
		},
		"vincysqldw_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'vincysqldw'"
		},
		"vincysqldw2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'vincysqldw2'"
		},
		"vincysynapse_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'vincysynapse'"
		},
		"yuandw_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'yuandw'"
		},
		"AzureDataExplorer1_properties_typeProperties_endpoint": {
			"type": "string",
			"defaultValue": "https://bjadx.chinanorth2.kusto.chinacloudapi.cn"
		},
		"AzureDataExplorer1_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "954ddad8-66d7-47a8-8f9f-1316152d9587"
		},
		"AzureDataExplorer1_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "facb435b-47a3-4ce7-b0ef-dcbf7d97f76a"
		},
		"AzureDataExplorer1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "adxdb1"
		},
		"AzureDataExplorer2_properties_typeProperties_endpoint": {
			"type": "string",
			"defaultValue": "https://bjadxn3.chinanorth3.kusto.chinacloudapi.cn"
		},
		"AzureDataExplorer2_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "954ddad8-66d7-47a8-8f9f-1316152d9587"
		},
		"AzureDataExplorer2_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "facb435b-47a3-4ce7-b0ef-dcbf7d97f76a"
		},
		"AzureDataExplorer2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "bjadxdbn3"
		},
		"AzureDataExplorer3_properties_typeProperties_endpoint": {
			"type": "string",
			"defaultValue": "https://bjadxce2.chinaeast2.kusto.chinacloudapi.cn"
		},
		"AzureDataExplorer3_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "954ddad8-66d7-47a8-8f9f-1316152d9587"
		},
		"AzureDataExplorer3_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "facb435b-47a3-4ce7-b0ef-dcbf7d97f76a"
		},
		"AzureDataExplorer3_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "adxce2db"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://bjespadls2.dfs.core.chinacloudapi.cn"
		},
		"AzureDataLakeStorage2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://baijunadlsgen2.dfs.core.chinacloudapi.cn"
		},
		"AzureDataLakeStorage3_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://testpremadx.dfs.core.chinacloudapi.cn/"
		},
		"AzureDatabricksbjucdbrtest3_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "1016-085658-e1ol6de2"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://bjadfkeyvault.vault.azure.cn/"
		},
		"AzureSynapseAnalyticsSP1_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "facb435b-47a3-4ce7-b0ef-dcbf7d97f76a"
		},
		"AzureSynapseAnalyticsSP1_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "954ddad8-66d7-47a8-8f9f-1316152d9587"
		},
		"Odbc1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "baijun@bjmysqltest"
		},
		"blobtrigger_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://testtrigger1.blob.core.chinacloudapi.cn"
		},
		"Eventtrigger1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/fdcb27da-91d5-4223-b967-85cfbc459a75/resourceGroups/baijun-ADF2-RSG2/providers/Microsoft.Storage/storageAccounts/testtrigger1"
		},
		"Trigger_7ad_properties_pipeline_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"Trigger_7ad_properties_pipeline_parameters_windowEnd": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		},
		"Tumblingadx_properties_pipeline_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"Tumblingadx_properties_pipeline_parameters_windowEnd": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		},
		"trigger2_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/fdcb27da-91d5-4223-b967-85cfbc459a75/resourceGroups/baijun-ADF2-RSG2/providers/Microsoft.Storage/storageAccounts/testtrigger1"
		},
		"AzureMySql971_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/fdcb27da-91d5-4223-b967-85cfbc459a75/resourceGroups/baijun-mysql-test1/providers/Microsoft.DBforMySQL/servers/bjmysqltest"
		},
		"AzureMySql971_properties_groupId": {
			"type": "string",
			"defaultValue": "mysqlServer"
		},
		"AzureMySql971_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"bjmysqltest.mysql.database.chinacloudapi.cn"
			]
		},
		"AzureSqlDatabase806_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/fdcb27da-91d5-4223-b967-85cfbc459a75/resourceGroups/baijun-SQL-1/providers/Microsoft.Sql/servers/bjnrth2"
		},
		"AzureSqlDatabase806_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlServer"
		},
		"AzureSqlDatabase806_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"bjnrth2.database.chinacloudapi.cn"
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ADXToADX')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPYFrompsqltosql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "baijunhdiblob1",
									"type": "LinkedServiceReference"
								},
								"path": "adfjobs",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzurePostgreSqlTable2",
								"type": "DatasetReference",
								"parameters": {
									"tabname": "table01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzurePostgreSqlTable2')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]",
				"[concat(variables('factoryId'), '/linkedServices/baijunhdiblob1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPYFromsqltopsql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "baijunhdiblob1",
									"type": "LinkedServiceReference"
								},
								"path": "adfjobs",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzurePostgreSqlTable2",
								"type": "DatasetReference",
								"parameters": {
									"tabname": "table01"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]",
				"[concat(variables('factoryId'), '/datasets/AzurePostgreSqlTable2')]",
				"[concat(variables('factoryId'), '/linkedServices/baijunhdiblob1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_7incremental')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_7ad",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "adfinctest//"
							},
							{
								"name": "Destination",
								"value": "adfinctest//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@pipeline().parameters.windowStart",
										"type": "Expression"
									},
									"modifiedDatetimeEnd": {
										"value": "@pipeline().parameters.windowEnd",
										"type": "Expression"
									},
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_7ad",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_7ad",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_7ad')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_7ad')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatabricksParameter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variable1_copy1",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Set variable1_copy1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/baili@mcpod.partner.onmschina.cn/test_adf_parameter",
							"baseParameters": {
								"tabname": {
									"value": "@variables('tabfullname')",
									"type": "Expression"
								},
								"schemaname": {
									"value": "@variables('schema')",
									"type": "Expression"
								},
								"catalogname": {
									"value": "@variables('catalogname')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksbjucdbrtest3",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "tabfullname",
							"value": {
								"value": "@pipeline().parameters.testparameter1",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1_copy1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "schema",
							"value": {
								"value": "@pipeline().parameters.testparameter2",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1_copy1_copy1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "catalogname",
							"value": {
								"value": "@pipeline().parameters.testparameter3",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"testparameter1": {
						"type": "string",
						"defaultValue": "salesorderdetail"
					},
					"testparameter2": {
						"type": "string",
						"defaultValue": "testschema"
					},
					"testparameter3": {
						"type": "string",
						"defaultValue": "bjuc1"
					}
				},
				"variables": {
					"tabfullname": {
						"type": "String",
						"defaultValue": "''"
					},
					"schema": {
						"type": "String"
					},
					"catalogname": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-14T05:26:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricksbjucdbrtest3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshAAS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AASRefresh",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"turnOffAsync": true,
							"url": {
								"value": "https://chinaeast2.asazure.chinacloudapi.cn/servers/bjaastest/models/TabularProject221124/refreshes",
								"type": "Expression"
							},
							"body": "{ \n\n    \"Type\": \"Full\", \n\n    \"CommitMode\": \"transactional\", \n\n    \"MaxParallelism\":10, \n\n    \"RetryCount\": 2, \n\n    }",
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.chinacloudapi.cn"
							}
						}
					},
					{
						"name": "getRefreshStatus",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('https://chinaeast2.asazure.chinacloudapi.cn/servers/bjaastest/models/TabularProject221124/refreshes/',activity('AASRefresh').output.operationId)",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.chinacloudapi.cn"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getRefreshStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RefreshStatus",
							"value": {
								"value": "@activity('getRefreshStatus').output.status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "AASRefresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 60
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('RefreshStatus'), 'failed')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Fail1",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "RefreshFailed",
										"errorCode": "RefreshFailed"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"refreshId": {
						"type": "String"
					},
					"status": {
						"type": "String"
					},
					"startTime": {
						"type": "String"
					},
					"RefreshStatus": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FromDBRtoMySQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "blobtrigger",
									"type": "LinkedServiceReference"
								},
								"path": "adftest"
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDatabricksDeltaLakeDataset1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureMySqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDatabricksDeltaLakeDataset1')]",
				"[concat(variables('factoryId'), '/datasets/AzureMySqlTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/blobtrigger')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Refresh PBI Dataset')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AAD auth",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"content-type": "application/x-www-form-urlencoded"
							},
							"url": "https://login.partner.microsoftonline.cn/5691a5bf-29c0-43e2-b547-1377a4110078/oauth2/token",
							"body": "grant_type=client_credentials&client_id=327a78a2-5222-4207-84ac-51a8362f8c59&client_secret=75_M17U0D9_-A~SboK~SYlb~G-a2Qnp0g4&resource=https://analysis.chinacloudapi.cn/powerbi/api"
						}
					},
					{
						"name": "Refresh Dataset",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "AAD auth",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"content-type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat(string(activity('AAD auth').output.token_type),' ',string(activity('AAD auth').output.access_token))",
									"type": "Expression"
								}
							},
							"url": "https://api.powerbi.cn/v1.0/myorg/groups/c0d63656-d3da-46be-9ce9-63d127ab925b/datasets/5b199cbb-76ee-4190-bb88-5984963ff042/refreshes",
							"body": "notifyOption=NoNotification"
						}
					},
					{
						"name": "Get Last Refresh Result in a Loop",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Refresh Dataset",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals('Unknown',variables('Refresh Status') ))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 10
									}
								},
								{
									"name": "Get Dataset Refresh Status",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Wait1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"Authorization": {
												"value": "@concat(string(activity('AAD auth').output.token_type),' ',string(activity('AAD auth').output.access_token))",
												"type": "Expression"
											}
										},
										"url": "https://api.powerbi.cn/v1.0/myorg/groups/c0d63656-d3da-46be-9ce9-63d127ab925b/datasets/5b199cbb-76ee-4190-bb88-5984963ff042/refreshes?$top=1"
									}
								},
								{
									"name": "Refresh Result",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get Dataset Refresh Status",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Refresh Status",
										"value": {
											"value": "@activity('Get Dataset Refresh Status').output.value[0].status",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Last Refresh Result in a Loop",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('Refresh Status'), 'Completed')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Throw an Error",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {},
										"url": "https://invalidurl",
										"body": {
											"invalid": "invalid"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Refresh Status": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:33Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TriggerPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "databrickstosql",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/databrickstosql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UTCNOWTEST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "adfstarttime",
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "UTCNOWLOOKUP",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_TEST_GET_TIME]",
								"storedProcedureParameters": {
									"ADF_RUN_TIME": {
										"type": "String",
										"value": {
											"value": "2022-04-14T06:52:28.2653491Z",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsTable2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "UTCNOWLOOKUP1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_TEST_GET_TIME1]",
								"storedProcedureParameters": {
									"ADF_RUN_TIME": {
										"type": "String",
										"value": {
											"value": "@variables('adfstarttime')",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsTable2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_TEST_GET_TIME]",
							"storedProcedureParameters": {
								"ADF_RUN_TIME": {
									"value": {
										"value": "@variables('adfstarttime')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "dbpodsynapse",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"adfstarttime": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable2')]",
				"[concat(variables('factoryId'), '/linkedServices/dbpodsynapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfToSynapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[copytotrip3]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalyticsADFMI",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalyticsADFMI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adfToSynapse_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[copytotrip2-1]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseAnalyticsSP1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalyticsSP1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/databrickstosql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('folderarray')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"exportSettings": {
												"type": "AzureDatabricksDeltaLakeExportCommand"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureDataLakeStorage2",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@item()",
												"type": "Expression"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "id",
														"type": "Int"
													},
													"sink": {
														"name": "id",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "name",
														"type": "string"
													},
													"sink": {
														"name": "name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "email",
														"type": "string"
													},
													"sink": {
														"name": "email",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "AzureDatabricksDeltaLakeDataset1",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable3",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"exportSettings": {
												"type": "AzureDatabricksDeltaLakeExportCommand"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureDataLakeStorage2",
												"type": "LinkedServiceReference"
											},
											"path": "test3"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "id",
														"type": "Int"
													},
													"sink": {
														"name": "id",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "name",
														"type": "string"
													},
													"sink": {
														"name": "name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "email",
														"type": "string"
													},
													"sink": {
														"name": "email",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "AzureDatabricksDeltaLakeDataset1",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable3",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Copy data1_copy1_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureDataLakeStorage2",
									"type": "LinkedServiceReference"
								},
								"path": "test2"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int"
										},
										"sink": {
											"name": "id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "string"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "string"
										},
										"sink": {
											"name": "email",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDatabricksDeltaLakeDataset1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"folderarray": {
						"type": "Array",
						"defaultValue": [
							"test1",
							"test3"
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDatabricksDeltaLakeDataset1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/databrickstosql_123123')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1_copy2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureDataLakeStorage2",
									"type": "LinkedServiceReference"
								},
								"path": {
									"value": "test1",
									"type": "Expression"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int"
										},
										"sink": {
											"name": "id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "string"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "string"
										},
										"sink": {
											"name": "email",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDatabricksDeltaLakeDataset1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Execute Pipeline1_copy2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup1_copy2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "databrickstosql_subpip",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Lookup1_copy2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data1_copy2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Lookup1_copy2_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data1_copy2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"folderarray": {
						"type": "Array",
						"defaultValue": [
							"test1",
							"test3"
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDatabricksDeltaLakeDataset1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/pipelines/databrickstosql_subpip')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/databrickstosql_456456')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('folderarray')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"exportSettings": {
												"type": "AzureDatabricksDeltaLakeExportCommand"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureDataLakeStorage2",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@item()",
												"type": "Expression"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "id",
														"type": "Int"
													},
													"sink": {
														"name": "id",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "name",
														"type": "string"
													},
													"sink": {
														"name": "name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "email",
														"type": "string"
													},
													"sink": {
														"name": "email",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "AzureDatabricksDeltaLakeDataset1",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable3",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Execute Pipeline1_copy2",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Lookup1_copy2",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "databrickstosql_subpip",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "Lookup1_copy2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Copy data1_copy1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlTable3",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"folderarray": {
						"type": "Array",
						"defaultValue": [
							"test1",
							"test3"
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDatabricksDeltaLakeDataset1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/pipelines/databrickstosql_subpip')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/databrickstosql_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('folderarray')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"exportSettings": {
												"type": "AzureDatabricksDeltaLakeExportCommand"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureDataLakeStorage2",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@item()",
												"type": "Expression"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "id",
														"type": "Int"
													},
													"sink": {
														"name": "id",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "name",
														"type": "string"
													},
													"sink": {
														"name": "name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "email",
														"type": "string"
													},
													"sink": {
														"name": "email",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "AzureDatabricksDeltaLakeDataset1",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable3",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"exportSettings": {
												"type": "AzureDatabricksDeltaLakeExportCommand"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureDataLakeStorage2",
												"type": "LinkedServiceReference"
											},
											"path": "test3"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "id",
														"type": "Int"
													},
													"sink": {
														"name": "id",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "name",
														"type": "string"
													},
													"sink": {
														"name": "name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "email",
														"type": "string"
													},
													"sink": {
														"name": "email",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "AzureDatabricksDeltaLakeDataset1",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable3",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Execute Pipeline1_copy2",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Lookup1_copy2",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "databrickstosql_subpip",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "Lookup1_copy2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Copy data1_copy1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlTable3",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Lookup1_copy2_copy1",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Copy data1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlTable3",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Lookup1_copy3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"folderarray": {
						"type": "Array",
						"defaultValue": [
							"test3"
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/datasets/AzureDatabricksDeltaLakeDataset1')]",
				"[concat(variables('factoryId'), '/pipelines/databrickstosql_subpip')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/databrickstosql_copy2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('folderarray')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"exportSettings": {
												"type": "AzureDatabricksDeltaLakeExportCommand"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureDataLakeStorage2",
												"type": "LinkedServiceReference"
											},
											"path": {
												"value": "@item()",
												"type": "Expression"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "id",
														"type": "Int"
													},
													"sink": {
														"name": "id",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "name",
														"type": "string"
													},
													"sink": {
														"name": "name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "email",
														"type": "string"
													},
													"sink": {
														"name": "email",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "AzureDatabricksDeltaLakeDataset1",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable3",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"exportSettings": {
												"type": "AzureDatabricksDeltaLakeExportCommand"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "AzureDataLakeStorage2",
												"type": "LinkedServiceReference"
											},
											"path": "test3"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "id",
														"type": "Int"
													},
													"sink": {
														"name": "id",
														"type": "Int32"
													}
												},
												{
													"source": {
														"name": "name",
														"type": "string"
													},
													"sink": {
														"name": "name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "email",
														"type": "string"
													},
													"sink": {
														"name": "email",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "AzureDatabricksDeltaLakeDataset1",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable3",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Execute Pipeline1_copy2",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Lookup1_copy2",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "databrickstosql_subpip",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "Lookup1_copy2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Copy data1_copy1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlTable3",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Lookup1_copy2_copy1",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Copy data1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlTable3",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Lookup1_copy3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"folderarray": {
						"type": "Array",
						"defaultValue": [
							"test3"
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/datasets/AzureDatabricksDeltaLakeDataset1')]",
				"[concat(variables('factoryId'), '/pipelines/databrickstosql_subpip')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/databrickstosql_subpip')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowtest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/delimetertext6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureMySqlTable6",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet3')]",
				"[concat(variables('factoryId'), '/datasets/AzureMySqlTable6')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/delimitertest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureMySqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureMySqlTable3')]",
				"[concat(variables('factoryId'), '/datasets/Parquet2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/inccopystg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@variables('maxTime')",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Binary1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Binary2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Binary2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetFilemetadata",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Binary2",
											"type": "DatasetReference",
											"parameters": {}
										},
										"fieldList": [
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetFilemetadata",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('GetFilemetadata').output.lastModified,variables('maxTime') )",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Setmaxtime",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "maxTime",
													"value": {
														"value": "@convertTimeZone(activity('GetFilemetadata').output.lastModified,'UTC', 'China Standard Time')",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"maxTime": {
						"type": "String",
						"defaultValue": "2021-01-01T21:10:24Z"
					},
					"fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary1')]",
				"[concat(variables('factoryId'), '/datasets/Binary2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/mysqljsontest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select track_id, CAST(all_json AS JSON) as b from `motion365-production`",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureMySqlJSONTEST",
								"type": "DatasetReference",
								"parameters": {
									"TabName": "motion365-production"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLSJSONTest",
								"type": "DatasetReference",
								"parameters": {
									"Folder": "Temp",
									"Name": "test.parquet"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureMySqlJSONTEST')]",
				"[concat(variables('factoryId'), '/datasets/ADLSJSONTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pgsqlToStorage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "@concat('select * from ',pipeline().parameters.schema,'.',pipeline().parameters.name)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Info",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorage1",
										"type": "LinkedServiceReference"
									},
									"path": "sessionlog"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzurePostgreSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"variables": {
					"schema": {
						"type": "String"
					},
					"table": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzurePostgreSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText4')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline10')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sqlpermtest",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "testupsertsql2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sqlpermtest')]",
				"[concat(variables('factoryId'), '/datasets/testupsertsql2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline10_FromADLSGen2toSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "testupsertsql21",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sqlpermtest",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/testupsertsql21')]",
				"[concat(variables('factoryId'), '/datasets/sqlpermtest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline10_FromSQLtoBlob_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/Parquet1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline11')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline12')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pipeline10_FromADLSGen2toSQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline10_FromADLSGen2toSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline12_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "bjmimasking",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/bjmimasking')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline13')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "a",
											"type": "Int32"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "b",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "name1",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText7",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureMySqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText7')]",
				"[concat(variables('factoryId'), '/datasets/AzureMySqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline14')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureMySqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText7",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureMySqlTable2')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline7')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Checkstatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ifcheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Lookup1').output.firstrow.status,'1')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"type": "String",
														"ordinal": 1
													},
													"sink": {
														"name": "a",
														"type": "Int32"
													}
												},
												{
													"source": {
														"type": "String",
														"ordinal": 2
													},
													"sink": {
														"name": "b",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "blob2sql",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Azureblobtosql",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Checkstatus')]",
				"[concat(variables('factoryId'), '/datasets/blob2sql')]",
				"[concat(variables('factoryId'), '/datasets/Azureblobtosql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline7_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "a",
											"type": "Int32"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "b",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "blob2sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Azureblobtosql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "updatestatus",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[chkstatusproc]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Checkstatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/blob2sql')]",
				"[concat(variables('factoryId'), '/datasets/Azureblobtosql')]",
				"[concat(variables('factoryId'), '/datasets/Checkstatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline8')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSynapseAnalyticsTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable3')]",
				"[concat(variables('factoryId'), '/datasets/Parquet1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline9')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@addhours(utcnow(),-1)",
										"type": "Expression"
									},
									"modifiedDatetimeEnd": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobTestTrigger2",
									"type": "LinkedServiceReference"
								}
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": {
									"value": "@addhours(utcnow(),-1)",
									"type": "Expression"
								},
								"modifiedDatetimeEnd": {
									"value": "@utcnow()",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"concurrency": 4,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText3')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobTestTrigger2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/premblobtoadx')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": "2023-02-17T00:00:00Z",
									"modifiedDatetimeEnd": {
										"value": "@pipeline().parameters.windowEnd",
										"type": "Expression"
									},
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureDataExplorerSink",
								"ingestionMappingName": ""
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "PremJson1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureDataExplorerTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PremJson1')]",
				"[concat(variables('factoryId'), '/datasets/AzureDataExplorerTable3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testlookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlMISource",
								"sqlReaderQuery": "select * from dbo.testbcp",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlMITable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from [@{activity('Lookup1').output.firstRow.a}].[@{activity('Lookup1').output.firstRow.b}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText5",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlMITable1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testperm')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook2",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/baili@mcpod.partner.onmschina.cn/test/testper"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testpython')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "testvaa",
							"value": {
								"value": "@pipeline().parameters.testseta",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"testseta": {
						"type": "string",
						"defaultValue": "\"aaa\""
					}
				},
				"variables": {
					"testvaa": {
						"type": "String",
						"defaultValue": "\"abc\""
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-10T11:38:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/upserttest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.tab_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureMySqlSource",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"ID"
												]
											},
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"value": "@item().copyActivity.translator",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "AzureMySqlTable3",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlUpsert1",
											"type": "DatasetReference",
											"parameters": {
												"des_table": "@item().destination.table"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"tab_items": {
						"type": "array",
						"defaultValue": [
							{
								"source": {
									"tableName": "testupsert5"
								},
								"destination": {
									"table": "testupsertsql5"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "ID",
													"type": "Int32"
												},
												"sink": {
													"name": "ID",
													"type": "Int32"
												}
											},
											{
												"source": {
													"name": "LastName",
													"type": "String"
												},
												"sink": {
													"name": "LastName",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "FirstName",
													"type": "String"
												},
												"sink": {
													"name": "FirstName",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "Age",
													"type": "Int32"
												},
												"sink": {
													"name": "Age",
													"type": "Int32"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureMySqlTable3')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlUpsert1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/vincypipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzurePostgreSQLSink",
								"writeBatchSize": 1000000,
								"writeBatchTimeout": "00:30:00",
								"writeMethod": "CopyCommand"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "st_project_status"
										},
										"sink": {
											"name": "st_project_status"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzurePostgreSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzurePostgreSqlTable4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-03T06:25:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzurePostgreSqlTable3')]",
				"[concat(variables('factoryId'), '/datasets/AzurePostgreSqlTable4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSJSONTest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage3",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Folder": {
						"type": "string"
					},
					"Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().Name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Folder",
							"type": "Expression"
						},
						"fileSystem": "adftest"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataExplorerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataExplorer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDataExplorerTable",
				"schema": [],
				"typeProperties": {
					"table": "StormEvents"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataExplorer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataExplorerTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataExplorer2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDataExplorerTable",
				"schema": [],
				"typeProperties": {
					"table": "StormEvents2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataExplorer2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataExplorerTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataExplorer3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDataExplorerTable",
				"schema": [],
				"typeProperties": {
					"table": "TestTableb"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataExplorer3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLakeDataset1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDatabricksDeltaLake1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": "test",
					"table": "fi_table1"
				},
				"schema": [
					{
						"name": "DateID",
						"type": "integer"
					},
					{
						"name": "MedallionID",
						"type": "integer"
					},
					{
						"name": "HackneyLicenseID",
						"type": "integer"
					},
					{
						"name": "PickupTimeID",
						"type": "integer"
					},
					{
						"name": "DropoffTimeID",
						"type": "integer"
					},
					{
						"name": "PickupGeographyID",
						"type": "integer"
					},
					{
						"name": "DropoffGeographyID",
						"type": "integer"
					},
					{
						"name": "PickupLatitude",
						"type": "double"
					},
					{
						"name": "PickupLongitude",
						"type": "double"
					},
					{
						"name": "PickupLatLong",
						"type": "string"
					},
					{
						"name": "DropoffLatitude",
						"type": "double"
					},
					{
						"name": "DropoffLongitude",
						"type": "double"
					},
					{
						"name": "DropoffLatLong",
						"type": "string"
					},
					{
						"name": "PassengerCount",
						"type": "integer"
					},
					{
						"name": "TripDurationSeconds",
						"type": "integer"
					},
					{
						"name": "TripDistanceMiles",
						"type": "double"
					},
					{
						"name": "PaymentType",
						"type": "string"
					},
					{
						"name": "FareAmount",
						"type": "double"
					},
					{
						"name": "SurchargeAmount",
						"type": "double"
					},
					{
						"name": "TaxAmount",
						"type": "double"
					},
					{
						"name": "TipAmount",
						"type": "double"
					},
					{
						"name": "TollsAmount",
						"type": "double"
					},
					{
						"name": "TotalAmount",
						"type": "double"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricksDeltaLake1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySqlJSONTEST')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMySql2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TabName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "a",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "b",
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().TabName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMySql2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMySql2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "trip"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMySql2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMySql2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "`test234`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMySql2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMySql2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "`test`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMySql2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySqlTable4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMySqlUpsertToSQL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"src_tabname": {
						"type": "string",
						"defaultValue": "@item().source.tableName"
					}
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "ID",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "LastName",
						"scale": 0
					},
					{
						"name": "FirstName",
						"scale": 0
					},
					{
						"name": "Age",
						"precision": 10,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": {
						"value": "@dataset().src_tabname",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMySqlUpsertToSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySqlTable5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "vincymysql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "`test3`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/vincymysql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySqlTable6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureMySql2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "gender",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "birthday",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "location",
						"precision": 50,
						"scale": 0
					},
					{
						"name": "channel",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "referred_by",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "added_by",
						"precision": 20,
						"scale": 0
					},
					{
						"name": "tags",
						"precision": 200,
						"scale": 0
					},
					{
						"name": "create_datetime",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "accept_terms_condition_datetime",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "accept_privacy_notice_datetime",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "sms_subscription",
						"precision": 3,
						"scale": 0
					},
					{
						"name": "accept_sms_datetime",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "status",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "update_datetime",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "country",
						"precision": 200,
						"scale": 0
					},
					{
						"name": "province",
						"precision": 200,
						"scale": 0
					},
					{
						"name": "city",
						"precision": 244,
						"scale": 0
					},
					{
						"name": "district",
						"precision": 200,
						"scale": 0
					},
					{
						"name": "device",
						"precision": 150,
						"scale": 0
					},
					{
						"name": "latitude",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "longitude",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "latest_login",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "survey_flag",
						"precision": 3,
						"scale": 0
					},
					{
						"name": "states",
						"precision": 20,
						"scale": 0
					},
					{
						"name": "postal_code",
						"precision": 20,
						"scale": 0
					},
					{
						"name": "firm_name",
						"precision": 44,
						"scale": 0
					},
					{
						"name": "team_size",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "disabled_reason",
						"precision": 250,
						"scale": 0
					},
					{
						"name": "profile_completed",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "age_range",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "failed_times",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "post_office",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "first_accept_tc_time",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "first_accept_pn_time",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "tc_time",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "tc_version",
						"precision": 20,
						"scale": 0
					},
					{
						"name": "pn_time",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "pn_version",
						"precision": 20,
						"scale": 0
					},
					{
						"name": "linked_facebook",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "mc_cm_status",
						"precision": 2,
						"scale": 0
					},
					{
						"name": "is_mbr",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "is_legacy",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "is_profile",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "login_count",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "latest_channel",
						"precision": 200,
						"scale": 0
					},
					{
						"name": "request_delete_time",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "delete_reason_type",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "delete_reason",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "delete_time",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "first_name",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "last_name",
						"precision": 100,
						"scale": 0
					},
					{
						"name": "r_gsp_user_version",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "r_gsp_company_version",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "r_tc_locale",
						"precision": 20,
						"scale": 0
					},
					{
						"name": "is_enable_nfc_write",
						"precision": 10,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "`testtab2`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMySql2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurePostgreSql2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "id",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "val",
						"precision": 53,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "public",
					"table": "test"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurePostgreSql2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurePostgreSql3",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tabname": {
						"type": "string",
						"defaultValue": "table01"
					}
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": {
						"value": "@dataset().tabname",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurePostgreSql3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "psqlvincysource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "st_project_status",
						"precision": 10,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "public",
					"table": "tt_project_header"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/psqlvincysource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSqlTable4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "vincypsqltarget",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "st_project_status",
						"precision": 10,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "public",
					"table": "tt_project_header"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/vincypsqltarget')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlMITable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlMI1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": [
					{
						"name": "a",
						"type": "int",
						"precision": 10
					},
					{
						"name": "b",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "testbcp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlMI1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlSampleTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azurebaijuntestsql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DateTime4",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Column1",
						"type": "varchar"
					},
					{
						"name": "Column2",
						"type": "varchar"
					},
					{
						"name": "Column3",
						"type": "char"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SampleTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azurebaijuntestsql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azurebaijuntestsql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azurebaijuntestsql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cre_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "note",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "table01"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azurebaijuntestsql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "email",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "fi_table1_sql"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azurebaijuntestsql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlUpsert1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlUpsert1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"des_table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().des_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlUpsert1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "a",
						"type": "int",
						"precision": 10
					},
					{
						"name": "b",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dwtest"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dbpodsynapse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dbpodsynapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dbpodsynapse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "DateID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MedallionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "HackneyLicenseID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PickupTimeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DropoffTimeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PickupGeographyID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DropoffGeographyID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PickupLatitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PickupLongitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PickupLatLong",
						"type": "varchar"
					},
					{
						"name": "DropoffLatitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DropoffLongitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DropoffLatLong",
						"type": "varchar"
					},
					{
						"name": "PassengerCount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TripDurationSeconds",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TripDistanceMiles",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PaymentType",
						"type": "varchar"
					},
					{
						"name": "FareAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "SurchargeAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TipAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TollsAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": "nyctaxi",
					"table": "smalltrip"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dbpodsynapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "vincydw",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "DateID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MedallionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "HackneyLicenseID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PickupTimeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DropoffTimeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PickupGeographyID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DropoffGeographyID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PickupLatitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PickupLongitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PickupLatLong",
						"type": "varchar"
					},
					{
						"name": "DropoffLatitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DropoffLongitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DropoffLatLong",
						"type": "varchar"
					},
					{
						"name": "PassengerCount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TripDurationSeconds",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TripDistanceMiles",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PaymentType",
						"type": "varchar"
					},
					{
						"name": "FareAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "SurchargeAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TipAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TollsAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Department"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/vincydw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azureblobtosql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azurebaijuntestsql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "a",
						"type": "int",
						"precision": 10
					},
					{
						"name": "b",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "testbcp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azurebaijuntestsql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "stgadfinctest",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adfinctest"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/stgadfinctest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "stgadfinctestsink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adfinctest"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/stgadfinctestsink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Checkstatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azurebaijuntestsql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "status",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "checkstatus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azurebaijuntestsql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobtrigger",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adftest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobtrigger')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobTestTrigger2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adftest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobTestTrigger2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adftest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "data_34618568-3ac3-4025-b99d-70c43f27b376_3f955f91-6bac-47a6-8db3-422b73a8d31d.txt",
						"container": "adftest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "testbcp.csv",
						"container": "adfinctest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"rowdel": {
						"type": "String",
						"defaultValue": "concat('bj','\\r\\n')"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "bjmysqlcsv",
						"container": "adftest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "notice demo data - Copy.txt",
						"container": "adfrowdel"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_7ad')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "stgadfinctestsink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adfinctest"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/stgadfinctestsink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MITOBLOB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "test5",
						"container": "adftest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OdbcTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Odbc1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OdbcTable",
				"schema": [],
				"typeProperties": {
					"tableName": "`test123`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Odbc1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PGSQLDelimitedText4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adftest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobTestTrigger2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dbo.Department.parquet",
						"folderPath": "copyinto",
						"container": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobTestTrigger2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "bjparquet",
						"container": "adfrowdel"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "test_pqt.parquet",
						"container": "adfrowdel2"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "id",
						"type": "INT32"
					},
					{
						"name": "gender",
						"type": "INT32"
					},
					{
						"name": "birthday",
						"type": "INT96"
					},
					{
						"name": "location",
						"type": "UTF8"
					},
					{
						"name": "channel",
						"type": "UTF8"
					},
					{
						"name": "referred_by",
						"type": "UTF8"
					},
					{
						"name": "added_by",
						"type": "UTF8"
					},
					{
						"name": "tags",
						"type": "UTF8"
					},
					{
						"name": "create_datetime",
						"type": "INT96"
					},
					{
						"name": "accept_terms_condition_datetime",
						"type": "INT96"
					},
					{
						"name": "accept_privacy_notice_datetime",
						"type": "INT96"
					},
					{
						"name": "sms_subscription",
						"type": "BOOLEAN"
					},
					{
						"name": "accept_sms_datetime",
						"type": "INT96"
					},
					{
						"name": "status",
						"type": "INT32"
					},
					{
						"name": "update_datetime",
						"type": "INT96"
					},
					{
						"name": "country",
						"type": "UTF8"
					},
					{
						"name": "province",
						"type": "UTF8"
					},
					{
						"name": "city",
						"type": "UTF8"
					},
					{
						"name": "district",
						"type": "UTF8"
					},
					{
						"name": "device",
						"type": "UTF8"
					},
					{
						"name": "latitude",
						"type": "DOUBLE"
					},
					{
						"name": "longitude",
						"type": "DOUBLE"
					},
					{
						"name": "latest_login",
						"type": "INT96"
					},
					{
						"name": "survey_flag",
						"type": "BOOLEAN"
					},
					{
						"name": "states",
						"type": "UTF8"
					},
					{
						"name": "postal_code",
						"type": "UTF8"
					},
					{
						"name": "firm_name",
						"type": "UTF8"
					},
					{
						"name": "team_size",
						"type": "INT32"
					},
					{
						"name": "disabled_reason",
						"type": "UTF8"
					},
					{
						"name": "profile_completed",
						"type": "UTF8"
					},
					{
						"name": "age_range",
						"type": "UTF8"
					},
					{
						"name": "failed_times",
						"type": "INT32"
					},
					{
						"name": "post_office",
						"type": "UTF8"
					},
					{
						"name": "first_accept_tc_time",
						"type": "INT96"
					},
					{
						"name": "first_accept_pn_time",
						"type": "INT96"
					},
					{
						"name": "tc_time",
						"type": "INT96"
					},
					{
						"name": "tc_version",
						"type": "UTF8"
					},
					{
						"name": "pn_time",
						"type": "INT96"
					},
					{
						"name": "pn_version",
						"type": "UTF8"
					},
					{
						"name": "linked_facebook",
						"type": "UTF8"
					},
					{
						"name": "mc_cm_status",
						"type": "UTF8"
					},
					{
						"name": "is_mbr",
						"type": "UTF8"
					},
					{
						"name": "is_legacy",
						"type": "UTF8"
					},
					{
						"name": "is_profile",
						"type": "UTF8"
					},
					{
						"name": "login_count",
						"type": "INT32"
					},
					{
						"name": "latest_channel",
						"type": "UTF8"
					},
					{
						"name": "request_delete_time",
						"type": "INT96"
					},
					{
						"name": "delete_reason_type",
						"type": "INT32"
					},
					{
						"name": "delete_reason",
						"type": "UTF8"
					},
					{
						"name": "delete_time",
						"type": "INT96"
					},
					{
						"name": "first_name",
						"type": "UTF8"
					},
					{
						"name": "last_name",
						"type": "UTF8"
					},
					{
						"name": "r_gsp_user_version",
						"type": "INT32"
					},
					{
						"name": "r_gsp_company_version",
						"type": "INT32"
					},
					{
						"name": "r_tc_locale",
						"type": "UTF8"
					},
					{
						"name": "is_enable_nfc_write",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PostgreSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PostgreSql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "test"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PostgreSql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PremJson1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "adxeventtest"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"TimeStamp": {
							"type": "string"
						},
						"Value": {
							"type": "string"
						},
						"Source": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_7ad')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "stgadfinctest",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adfinctest"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/stgadfinctest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerSample",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "DateTime4",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Column1",
						"type": "varchar"
					},
					{
						"name": "Column2",
						"type": "varchar"
					},
					{
						"name": "Column3",
						"type": "char"
					},
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SampleTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServerSample')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bjmimasking')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bklsmi1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "MemberID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "Phone",
						"type": "varchar"
					},
					{
						"name": "Email",
						"type": "varchar"
					},
					{
						"name": "DiscountCode",
						"type": "smallint",
						"precision": 5
					}
				],
				"typeProperties": {
					"schema": "Data",
					"table": "Membership"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bklsmi1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob2sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "testbcp.dat",
						"container": "adftest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "'"
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwtestcsv1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "test1.csv",
						"fileSystem": "testdw1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/jsonmysqlparquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adftest"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/jsontest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "jsontest.csv",
						"container": "adftest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "'"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlpermtest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "Age",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "testupsertsql2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testupsertsql2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "test1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "1",
						"type": "String"
					},
					{
						"name": "3",
						"type": "String"
					},
					{
						"name": "5",
						"type": "String"
					},
					{
						"name": "6",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testupsertsql21')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.testupsertsql2.txt",
						"fileSystem": "test1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/vincytest2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "vincymysql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"precision": 19,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "`test4`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/vincymysql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1_ubuntu')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_ubuntu_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobTestTrigger2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobTestTrigger2_connectionString')]"
				},
				"connectVia": {
					"referenceName": "vincyshir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/vincyshir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataExplorer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataExplorer",
				"typeProperties": {
					"endpoint": "[parameters('AzureDataExplorer1_properties_typeProperties_endpoint')]",
					"tenant": "[parameters('AzureDataExplorer1_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('AzureDataExplorer1_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataExplorer1_servicePrincipalKey')]"
					},
					"database": "[parameters('AzureDataExplorer1_properties_typeProperties_database')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataExplorer2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataExplorer",
				"typeProperties": {
					"endpoint": "[parameters('AzureDataExplorer2_properties_typeProperties_endpoint')]",
					"tenant": "[parameters('AzureDataExplorer2_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('AzureDataExplorer2_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataExplorer2_servicePrincipalKey')]"
					},
					"database": "[parameters('AzureDataExplorer2_properties_typeProperties_database')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataExplorer3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataExplorer",
				"typeProperties": {
					"endpoint": "[parameters('AzureDataExplorer3_properties_typeProperties_endpoint')]",
					"tenant": "[parameters('AzureDataExplorer3_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('AzureDataExplorer3_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataExplorer3_servicePrincipalKey')]"
					},
					"database": "[parameters('AzureDataExplorer3_properties_typeProperties_database')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage2_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage3_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage3_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4624031639111869.1.databricks.azure.cn",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"instancePoolId": "0429-121028-muted1-pool-zwcktz8d",
					"newClusterNumOfWorker": "2:4",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "10.4.x-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Autoscaling"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-6778558653598421.1.databricks.azure.cn",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks2_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "10.4.x-scala2.12",
					"clusterOption": "Fixed",
					"newClusterInitScripts": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLake1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-4624031639111869.1.databricks.azure.cn",
					"clusterId": "1103-023005-x97az6t4",
					"workspaceResourceId": "/subscriptions/fdcb27da-91d5-4223-b967-85cfbc459a75/resourceGroups/bjdatabricks/providers/Microsoft.Databricks/workspaces/bjdbr1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLake2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-4624031639111869.1.databricks.azure.cn",
					"clusterId": "1103-023005-x97az6t4",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksDeltaLake2_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksbjucdbrtest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-5729185900588721.1.databricks.azure.cn",
					"clusterId": "1111-054638-uqxdzwct",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksbjucdbrtest_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksbjucdbrtest3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-5729185900588721.1.databricks.azure.cn",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksbjucdbrtest3_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricksbjucdbrtest3_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('AzureMySql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySql2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('AzureMySql2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySqlMPE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('AzureMySqlMPE_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySqlUpsertToSQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('AzureMySqlUpsertToSQL_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('AzurePostgreSql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('AzurePostgreSql2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('AzurePostgreSql3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlMI1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlMI",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlMI1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlUpsert1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlUpsert1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsADFMI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalyticsADFMI_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsSP1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalyticsSP1_connectionString')]",
					"servicePrincipalId": "[parameters('AzureSynapseAnalyticsSP1_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureSynapseAnalyticsSP1_servicePrincipalKey')]"
					},
					"tenant": "[parameters('AzureSynapseAnalyticsSP1_properties_typeProperties_tenant')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsqlauth')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalyticsqlauth_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azurebaijuntestsql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Azurebaijuntestsql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Odbc1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Odbc",
				"typeProperties": {
					"connectionString": {
						"type": "SecureString",
						"value": "[parameters('Odbc1_connectionString')]"
					},
					"authenticationType": "Basic",
					"userName": "[parameters('Odbc1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Odbc1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PostgreSql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "PostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('PostgreSql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerSample')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServerSample_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/baijunhdiblob1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('baijunhdiblob1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/bklsmi1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('bklsmi1_connectionString')]",
					"credential": {
						"referenceName": "bjusermi1",
						"type": "CredentialReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/credentials/bjusermi1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobtrigger')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('blobtrigger_properties_typeProperties_serviceEndpoint')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dbpodsynapse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('dbpodsynapse_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwsqlpool')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('dwsqlpool_connectionString')]"
				},
				"connectVia": {
					"referenceName": "vincyshir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/vincyshir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/psqlvincysource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('psqlvincysource_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stgadfinctest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('stgadfinctest_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stgadfinctestsink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('stgadfinctestsink_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/vincydw')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('vincydw_connectionString')]"
				},
				"connectVia": {
					"referenceName": "vincyshir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/vincyshir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/vincymysql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('vincymysql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/vincypsqltarget')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('vincypsqltarget_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/vincysql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('vincysql_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/vincysqldw')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('vincysqldw_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/vincysqldw2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('vincysqldw2_connectionString')]"
				},
				"connectVia": {
					"referenceName": "vincyshir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/vincyshir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/vincysynapse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('vincysynapse_connectionString')]"
				},
				"connectVia": {
					"referenceName": "shir1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/shir1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/yuandw')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('yuandw_connectionString')]"
				},
				"connectVia": {
					"referenceName": "vincyshir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/vincyshir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Eventtrigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline9",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/adftest/blobs/",
					"blobPathEndsWith": "test.log",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Eventtrigger1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline9')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_7ad')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "CopyPipeline_7incremental",
						"type": "PipelineReference"
					},
					"parameters": {
						"windowStart": "[parameters('Trigger_7ad_properties_pipeline_parameters_windowStart')]",
						"windowEnd": "[parameters('Trigger_7ad_properties_pipeline_parameters_windowEnd')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2022-01-10T05:52:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyPipeline_7incremental')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tumblingadx')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "premblobtoadx",
						"type": "PipelineReference"
					},
					"parameters": {
						"windowStart": "[parameters('Tumblingadx_properties_pipeline_parameters_windowStart')]",
						"windowEnd": "[parameters('Tumblingadx_properties_pipeline_parameters_windowEnd')]"
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 5,
					"startTime": "2023-02-17T11:52:00Z",
					"endTime": "2023-02-18T14:52:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/premblobtoadx')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/adftest/blobs/",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger2_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger3')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2022-02-24T09:50:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tumbling1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2020-01-14T02:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tumbling2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2020-01-14T02:33:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime3')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "chinaeast2",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60,
							"numberOfPipelineNodes": 1,
							"numberOfExternalNodes": 1
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/shir1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/vincyshir')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlMITable1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "MITOBLOB",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStorage1",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          a as integer,",
						"          b as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['test.xml'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlMITable1')]",
				"[concat(variables('factoryId'), '/datasets/MITOBLOB')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureDataExplorerTable1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureDataExplorerTable2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureDataExplorerTable1')]",
				"[concat(variables('factoryId'), '/datasets/AzureDataExplorerTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bjusermi1')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/fdcb27da-91d5-4223-b967-85cfbc459a75/resourceGroups/baijun-ADLS2-test/providers/Microsoft.ManagedIdentity/userAssignedIdentities/baijun-identity1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/credential1')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/fdcb27da-91d5-4223-b967-85cfbc459a75/resourceGroups/BJADFN3/providers/Microsoft.ManagedIdentity/userAssignedIdentities/bjusermin2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureMySql971')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureMySql971_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureMySql971_properties_groupId')]",
				"fqdns": "[parameters('AzureMySql971_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureSqlDatabase806')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureSqlDatabase806_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureSqlDatabase806_properties_groupId')]",
				"fqdns": "[parameters('AzureSqlDatabase806_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}