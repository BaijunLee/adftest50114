{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "bjtestdatafactoryn3"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage1_ubuntu_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1_ubuntu'"
		},
		"AzureDataExplorer1_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureDataExplorer1'"
		},
		"AzureDataExplorer2_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureDataExplorer2'"
		},
		"AzureDataExplorer3_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureDataExplorer3'"
		},
		"AzureDataLakeStorage3_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage3'"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"AzureDatabricks2_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks2'"
		},
		"AzureDatabricksDeltaLake2_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricksDeltaLake2'"
		},
		"AzureDatabricksbjucdbrtest_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricksbjucdbrtest'"
		},
		"AzureDatabricksbjucdbrtest3_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricksbjucdbrtest3'"
		},
		"AzureMySql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureMySql1'"
		},
		"AzureMySql2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureMySql2'"
		},
		"AzureDataExplorer1_properties_typeProperties_endpoint": {
			"type": "string",
			"defaultValue": "https://bjadx.chinanorth2.kusto.chinacloudapi.cn"
		},
		"AzureDataExplorer1_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "954ddad8-66d7-47a8-8f9f-1316152d9587"
		},
		"AzureDataExplorer1_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "facb435b-47a3-4ce7-b0ef-dcbf7d97f76a"
		},
		"AzureDataExplorer1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "adxdb1"
		},
		"AzureDataExplorer2_properties_typeProperties_endpoint": {
			"type": "string",
			"defaultValue": "https://bjadxn3.chinanorth3.kusto.chinacloudapi.cn"
		},
		"AzureDataExplorer2_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "954ddad8-66d7-47a8-8f9f-1316152d9587"
		},
		"AzureDataExplorer2_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "facb435b-47a3-4ce7-b0ef-dcbf7d97f76a"
		},
		"AzureDataExplorer2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "bjadxdbn3"
		},
		"AzureDataExplorer3_properties_typeProperties_endpoint": {
			"type": "string",
			"defaultValue": "https://bjadxce2.chinaeast2.kusto.chinacloudapi.cn"
		},
		"AzureDataExplorer3_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "954ddad8-66d7-47a8-8f9f-1316152d9587"
		},
		"AzureDataExplorer3_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "facb435b-47a3-4ce7-b0ef-dcbf7d97f76a"
		},
		"AzureDataExplorer3_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "adxce2db"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://bjespadls2.dfs.core.chinacloudapi.cn"
		},
		"AzureDataLakeStorage2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://baijunadlsgen2.dfs.core.chinacloudapi.cn"
		},
		"AzureDataLakeStorage3_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://testpremadx.dfs.core.chinacloudapi.cn/"
		},
		"AzureDatabricksbjucdbrtest3_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "1016-085658-e1ol6de2"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://bjadfkeyvault.vault.azure.cn/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/FreshAAS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AASRefresh",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"turnOffAsync": true,
							"url": {
								"value": "https://chinaeast2.asazure.chinacloudapi.cn/servers/bjaastest/models/TabularProject221124/refreshes",
								"type": "Expression"
							},
							"body": "{ \n\n    \"Type\": \"Full\", \n\n    \"CommitMode\": \"transactional\", \n\n    \"MaxParallelism\":10, \n\n    \"RetryCount\": 2, \n\n    }",
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.chinacloudapi.cn"
							}
						}
					},
					{
						"name": "getRefreshStatus",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('https://chinaeast2.asazure.chinacloudapi.cn/servers/bjaastest/models/TabularProject221124/refreshes/',activity('AASRefresh').output.operationId)",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.chinacloudapi.cn"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "getRefreshStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RefreshStatus",
							"value": {
								"value": "@activity('getRefreshStatus').output.status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "AASRefresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 60
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('RefreshStatus'), 'failed')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Fail1",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "RefreshFailed",
										"errorCode": "RefreshFailed"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"refreshId": {
						"type": "String"
					},
					"status": {
						"type": "String"
					},
					"startTime": {
						"type": "String"
					},
					"RefreshStatus": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-14T09:48:59Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Refresh PBI Dataset')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AAD auth",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"content-type": "application/x-www-form-urlencoded"
							},
							"url": "https://login.partner.microsoftonline.cn/5691a5bf-29c0-43e2-b547-1377a4110078/oauth2/token",
							"body": "grant_type=client_credentials&client_id=327a78a2-5222-4207-84ac-51a8362f8c59&client_secret=75_M17U0D9_-A~SboK~SYlb~G-a2Qnp0g4&resource=https://analysis.chinacloudapi.cn/powerbi/api"
						}
					},
					{
						"name": "Refresh Dataset",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "AAD auth",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"content-type": "application/x-www-form-urlencoded",
								"Authorization": {
									"value": "@concat(string(activity('AAD auth').output.token_type),' ',string(activity('AAD auth').output.access_token))",
									"type": "Expression"
								}
							},
							"url": "https://api.powerbi.cn/v1.0/myorg/groups/c0d63656-d3da-46be-9ce9-63d127ab925b/datasets/5b199cbb-76ee-4190-bb88-5984963ff042/refreshes",
							"body": "notifyOption=NoNotification"
						}
					},
					{
						"name": "Get Last Refresh Result in a Loop",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Refresh Dataset",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals('Unknown',variables('Refresh Status') ))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 10
									}
								},
								{
									"name": "Get Dataset Refresh Status",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Wait1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {
											"Authorization": {
												"value": "@concat(string(activity('AAD auth').output.token_type),' ',string(activity('AAD auth').output.access_token))",
												"type": "Expression"
											}
										},
										"url": "https://api.powerbi.cn/v1.0/myorg/groups/c0d63656-d3da-46be-9ce9-63d127ab925b/datasets/5b199cbb-76ee-4190-bb88-5984963ff042/refreshes?$top=1"
									}
								},
								{
									"name": "Refresh Result",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get Dataset Refresh Status",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Refresh Status",
										"value": {
											"value": "@activity('Get Dataset Refresh Status').output.value[0].status",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Last Refresh Result in a Loop",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('Refresh Status'), 'Completed')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Throw an Error",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {},
										"url": "https://invalidurl",
										"body": {
											"invalid": "invalid"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Refresh Status": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-14T09:48:59Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/testpython')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "testvaa",
							"value": {
								"value": "@pipeline().parameters.testseta",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"testseta": {
						"type": "string",
						"defaultValue": "\"aaa\""
					}
				},
				"variables": {
					"testvaa": {
						"type": "String",
						"defaultValue": "\"abc\""
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-14T09:48:59Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1_ubuntu')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_ubuntu_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataExplorer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataExplorer",
				"typeProperties": {
					"endpoint": "[parameters('AzureDataExplorer1_properties_typeProperties_endpoint')]",
					"tenant": "[parameters('AzureDataExplorer1_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('AzureDataExplorer1_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataExplorer1_servicePrincipalKey')]"
					},
					"database": "[parameters('AzureDataExplorer1_properties_typeProperties_database')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataExplorer2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataExplorer",
				"typeProperties": {
					"endpoint": "[parameters('AzureDataExplorer2_properties_typeProperties_endpoint')]",
					"tenant": "[parameters('AzureDataExplorer2_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('AzureDataExplorer2_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataExplorer2_servicePrincipalKey')]"
					},
					"database": "[parameters('AzureDataExplorer2_properties_typeProperties_database')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataExplorer3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataExplorer",
				"typeProperties": {
					"endpoint": "[parameters('AzureDataExplorer3_properties_typeProperties_endpoint')]",
					"tenant": "[parameters('AzureDataExplorer3_properties_typeProperties_tenant')]",
					"servicePrincipalId": "[parameters('AzureDataExplorer3_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataExplorer3_servicePrincipalKey')]"
					},
					"database": "[parameters('AzureDataExplorer3_properties_typeProperties_database')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage2_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage3_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage3_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4624031639111869.1.databricks.azure.cn",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"instancePoolId": "0429-121028-muted1-pool-zwcktz8d",
					"newClusterNumOfWorker": "2:4",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "10.4.x-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Autoscaling"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-6778558653598421.1.databricks.azure.cn",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks2_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "10.4.x-scala2.12",
					"clusterOption": "Fixed",
					"newClusterInitScripts": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLake1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-4624031639111869.1.databricks.azure.cn",
					"clusterId": "1103-023005-x97az6t4",
					"workspaceResourceId": "/subscriptions/fdcb27da-91d5-4223-b967-85cfbc459a75/resourceGroups/bjdatabricks/providers/Microsoft.Databricks/workspaces/bjdbr1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLake2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-4624031639111869.1.databricks.azure.cn",
					"clusterId": "1103-023005-x97az6t4",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksDeltaLake2_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksbjucdbrtest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-5729185900588721.1.databricks.azure.cn",
					"clusterId": "1111-054638-uqxdzwct",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksbjucdbrtest_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksbjucdbrtest3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-5729185900588721.1.databricks.azure.cn",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksbjucdbrtest3_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricksbjucdbrtest3_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('AzureMySql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySql2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('AzureMySql2_connectionString')]"
				}
			},
			"dependsOn": []
		}
	]
}